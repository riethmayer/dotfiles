---
description: Rules for managing the Makefile, including target organization, documentation, and build process
globs: ["Makefile", "stow/**/Makefile", "stow/bootstrap/**/*.sh"]
alwaysApply: true
---

- Drive tests and execution through `make` and update the Makefile if necessary
- Always keep the `help` target as the first and default target
- Always add documentation for new targets
- Assume $XDG_ prefixed folders for configuration files configured in [005_tmux.zsh](mdc:stow/zsh/.oh-my-zsh/custom/zshrc.d/005_tmux.zsh).

# Makefile Structure
- Keep the `help` target as the first and default target
- Document all targets with `##` comments for help text
- Use consistent formatting for target documentation
- Group related targets together

# Core Targets
- `help`: Must be the first target
  - Shows STOW_DIR and PACKAGES variables
  - Lists all available targets with descriptions
  - Uses color formatting for better readability

- `install`: Basic stow installation
  - Creates symlinks for all packages
  - Uses --dir and --target options
  - Does not modify existing files

- `install-adopt`: Installation with file adoption
  - Creates symlinks and adopts existing files
  - Use with caution as it modifies existing files
  - Useful for initial setup

- `delete`: Clean removal
  - Removes all stow symlinks
  - Does not delete source files
  - Use for clean reinstallation

# Bootstrap Process
- `bootstrap`: Main bootstrap target
  - Depends on bootstrap_stage1 and install
  - Runs system-bootstrap.sh from $HOME/bin
  - Handles stage 2 of bootstrap process

- `bootstrap_stage1`: Initial bootstrap
  - Runs system-bootstrap.sh from stow/bootstrap/bin
  - Sets up Homebrew and Stow
  - Must complete before main bootstrap

# Tool-specific Targets
- Each tool should have its own target
- Follow the pattern:
  ```makefile
  tool:
      @echo "Setting up tool..."
      @chmod +x stow/bootstrap/.system-bootstrap.d/XXX_tool.sh
      @./stow/bootstrap/.system-bootstrap.d/XXX_tool.sh
  ```
- Keep tool setup scripts in bootstrap directory
- Use consistent naming (XXX_tool.sh)

# Variables and Functions
- Define variables at the top of the file
- Use shell commands for dynamic values
- Keep functions simple and focused
- Document complex functions

# Best Practices
- Use .PHONY for targets without files
- Use @ to suppress command echo
- Use consistent indentation (tabs)
- Keep targets focused and single-purpose
- Document all non-obvious behavior

