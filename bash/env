# -*- mode: shell-script -*-

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# shell prompt setup
function __git_ps1()
{
    local b="$(git symbolic-ref HEAD 2>/dev/null)";
    if [ -n "$b" ]; then
        printf " (%s)" "${b##refs/heads/}";
    fi
}

export PS1='\u\[\e[01;37m\]:`[[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "\[\e[31m\]" || echo "\[\e[32m\]"`$(__git_ps1 "(%s)\[\e[00m\]")\[\e[00m\]\$ '

# basic setup
export PATH=$HOME/bin:/usr/local/bin:$PATH:$HOME/packer
export TERM=xterm-256color
export GITHUB_LOGIN="riethmayer"
export EDITOR="emacs"

# link dotfiles
for config in tmux.conf gemrc gitconfig; do
    [ ! -f $HOME/.$config ] && ln -s $DOTFILES_DIR/$config $HOME/.$config
done
[ ! -d $HOME/bin ] && ln -s $DOTFILES_DIR/bin $HOME/bin

# homebrew
export PATH=/usr/local/sbin:$PATH

# git
if [[ -x `which git` ]]; then
  function git_scoreboard {
    git log | grep '^Author' | sort | uniq -ci | sort -r
  }

  function github_url {
    git config remote.origin.url | sed -En 's/git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'
  }

  function github_go {
    open $(github_url)
  }
fi

# me
export GITHUB_LOGIN="riethmayer"
[ ! -d $HOME/src/secret ] && echo "downloading secret" && pp secret
source $HOME/src/secret/environment.sh

# travis
[ -f $HOME/.travis ] && source $HOME/.travis/travis.sh


# bonusbox
export AWS_ENV="production"
export ORGANIZATION_GITHUB_LOGIN="bonusboxme"
export PROJECT_BASE=$HOME/bonusbox/projects
mkdir -p $PROJECT_BASE
[ -f $HOME/.aws_bonusbox ] && source $HOME/.aws_bonusbox
[ -d $PROJECT_BASE/bb ] && eval "$($PROJECT_BASE/bb/bin/bb init -)"
AMI_PATH=$PROJECT_BASE/ami_builder
[ ! -d $AMI_PATH ] && p ami_builder
export EC2_BONUSBOX_KEY=$AMI_PATH/config/ec2_bonusbox.pem

export PATH=$PATH:$HOME/.bi_tools/tools

# ruby
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

# go
export GOPATH=$HOME/.gocode
mkdir -p $GOPATH/bin
export PATH=$HOME/.gocode/bin:$PATH
echo "1.1.1" > $HOME/.go-version
export CHGO_ROOT=$DOTFILES_DIR/chgo
[ -f $CHGO_ROOT/share/chgo/chgo.sh ] && source $CHGO_ROOT/share/chgo/chgo.sh
